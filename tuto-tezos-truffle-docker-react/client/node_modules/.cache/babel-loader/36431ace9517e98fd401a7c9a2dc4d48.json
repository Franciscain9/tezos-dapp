{"ast":null,"code":"var _jsxFileName = \"/Users/anaischokote/franciscain/tezos-react-tutorial/client/src/Menu.js\";\nimport React, { useState } from \"react\";\n\nconst upperFirst = str => str[0].toUpperCase() + str.slice(1);\n\nconst mutezToTez = mutez => Math.round((parseInt(mutez) / 1000000 + Number.EPSILON) * 100) / 100;\n\nconst Menu = ({\n  coffeeMenu,\n  contractInstance,\n  userAddress,\n  setBalance,\n  Tezos,\n  userPoints,\n  setUserPoints\n}) => {\n  const [txStatus, setTxStatus] = useState(null);\n  const [txHash, setTxHash] = useState(undefined);\n\n  const buyCoffee = async (coffee, price) => {\n    try {\n      const op = await contractInstance.methods.buy(coffee).send({\n        amount: price,\n        mutez: true\n      });\n      console.log(op);\n\n      if (op.status === \"applied\") {\n        setTxStatus(\"applied\");\n        setTxHash(op.hash);\n      } else {\n        setTxStatus(\"error\");\n        throw Error(\"Transation not applied\");\n      }\n\n      await op.confirmation(1);\n\n      if (op.includedInBlock !== Infinity) {\n        setTxStatus(\"included\");\n        const newBalance = await Tezos.tz.getBalance(userAddress);\n        setBalance(newBalance);\n        setUserPoints(userPoints + 1);\n      } else {\n        throw Error(\"Transation not included in block\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (txStatus === null) {\n    let redeemPointsButton = \"\";\n\n    if (userPoints === undefined) {\n      redeemPointsButton = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"No point available\");\n    } else if (userPoints >= 0 && userPoints <= 9) {\n      redeemPointsButton = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Available points: \", userPoints);\n    } else if (userPoints === 10) {\n      redeemPointsButton = React.createElement(\"span\", {\n        className: \"action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Redeem Points\");\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"app-subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Please choose your coffee:\"), coffeeMenu.map(coffee => React.createElement(\"div\", {\n      className: \"card coffee_selection\",\n      key: coffee.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, upperFirst(coffee.name), \" (\\uA729 \", mutezToTez(coffee.price), \")\"), userAddress && React.createElement(\"div\", {\n      className: \"card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"card-footer-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"action\",\n      onClick: () => buyCoffee(coffee.name, coffee.price),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Buy\")), React.createElement(\"p\", {\n      className: \"card-footer-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, redeemPointsButton)))));\n  } else if (txStatus === \"applied\") {\n    return React.createElement(\"div\", {\n      className: \"message is-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Waiting for confirmation\")), React.createElement(\"div\", {\n      className: \"message-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Your transaction is being processed, please wait.\"), React.createElement(\"p\", {\n      className: \"coffee-loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"coffee-cup.png\",\n      alt: \"coffee-cup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Transaction number: \", txHash)));\n  } else if (txStatus === \"included\") {\n    return React.createElement(\"div\", {\n      className: \"message is-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Transaction confirmed!\")), React.createElement(\"div\", {\n      className: \"message-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Enjoy your coffee!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button is-info\",\n      onClick: () => setTxStatus(null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Buy a new coffee\"))));\n  } else if (txStatus === \"error\") {\n    return React.createElement(\"div\", {\n      className: \"message is-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Error\")), React.createElement(\"div\", {\n      className: \"message-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"An error has occurred, please try again.\")));\n  }\n};\n\nexport default Menu;","map":{"version":3,"sources":["/Users/anaischokote/franciscain/tezos-react-tutorial/client/src/Menu.js"],"names":["React","useState","upperFirst","str","toUpperCase","slice","mutezToTez","mutez","Math","round","parseInt","Number","EPSILON","Menu","coffeeMenu","contractInstance","userAddress","setBalance","Tezos","userPoints","setUserPoints","txStatus","setTxStatus","txHash","setTxHash","undefined","buyCoffee","coffee","price","op","methods","buy","send","amount","console","log","status","hash","Error","confirmation","includedInBlock","Infinity","newBalance","tz","getBalance","error","redeemPointsButton","map","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst upperFirst = str => str[0].toUpperCase() + str.slice(1);\n\nconst mutezToTez = mutez =>\n  Math.round((parseInt(mutez) / 1000000 + Number.EPSILON) * 100) / 100;\n\nconst Menu = ({\n  coffeeMenu,\n  contractInstance,\n  userAddress,\n  setBalance,\n  Tezos,\n  userPoints,\n  setUserPoints\n}) => {\n  const [txStatus, setTxStatus] = useState(null);\n  const [txHash, setTxHash] = useState(undefined);\n\n  const buyCoffee = async (coffee, price) => {\n    try {\n      const op = await contractInstance.methods\n        .buy(coffee)\n        .send({ amount: price, mutez: true });\n      console.log(op);\n      if (op.status === \"applied\") {\n        setTxStatus(\"applied\");\n        setTxHash(op.hash);\n      } else {\n        setTxStatus(\"error\");\n        throw Error(\"Transation not applied\");\n      }\n\n      await op.confirmation(1);\n      if (op.includedInBlock !== Infinity) {\n        setTxStatus(\"included\");\n        const newBalance = await Tezos.tz.getBalance(userAddress);\n        setBalance(newBalance);\n        setUserPoints(userPoints + 1);\n      } else {\n        throw Error(\"Transation not included in block\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (txStatus === null) {\n    let redeemPointsButton = \"\";\n    if (userPoints === undefined) {\n      redeemPointsButton = <span>No point available</span>;\n    } else if (userPoints >= 0 && userPoints <= 9) {\n      redeemPointsButton = <span>Available points: {userPoints}</span>;\n    } else if (userPoints === 10) {\n      redeemPointsButton = <span className=\"action\">Redeem Points</span>;\n    }\n\n    return (\n      <>\n        <div className=\"app-subtitle\">Please choose your coffee:</div>\n        {coffeeMenu.map(coffee => (\n          <div className=\"card coffee_selection\" key={coffee.name}>\n            <div className=\"card-content\">\n              {upperFirst(coffee.name)} (ꜩ {mutezToTez(coffee.price)})\n            </div>\n            {userAddress && (\n              <div className=\"card-footer\">\n                <p className=\"card-footer-item\">\n                  <span\n                    className=\"action\"\n                    onClick={() => buyCoffee(coffee.name, coffee.price)}\n                  >\n                    Buy\n                  </span>\n                </p>\n                <p className=\"card-footer-item\">{redeemPointsButton}</p>\n              </div>\n            )}\n          </div>\n        ))}\n      </>\n    );\n  } else if (txStatus === \"applied\") {\n    return (\n      <div className=\"message is-info\">\n        <div className=\"message-header\">\n          <p>Waiting for confirmation</p>\n        </div>\n        <div className=\"message-body\">\n          <p>Your transaction is being processed, please wait.</p>\n          <p className=\"coffee-loader\">\n            <img src=\"coffee-cup.png\" alt=\"coffee-cup\" />\n          </p>\n          <p>Transaction number: {txHash}</p>\n        </div>\n      </div>\n    );\n  } else if (txStatus === \"included\") {\n    return (\n      <div className=\"message is-success\">\n        <div className=\"message-header\">\n          <p>Transaction confirmed!</p>\n        </div>\n        <div className=\"message-body\">\n          <p>Enjoy your coffee!</p>\n          <br />\n          <p>\n            <button\n              className=\"button is-info\"\n              onClick={() => setTxStatus(null)}\n            >\n              Buy a new coffee\n            </button>\n          </p>\n        </div>\n      </div>\n    );\n  } else if (txStatus === \"error\") {\n    return (\n      <div className=\"message is-danger\">\n        <div className=\"message-header\">\n          <p>Error</p>\n        </div>\n        <div className=\"message-body\">\n          <p>An error has occurred, please try again.</p>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}