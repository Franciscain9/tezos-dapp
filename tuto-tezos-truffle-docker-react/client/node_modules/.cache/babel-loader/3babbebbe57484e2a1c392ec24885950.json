{"ast":null,"code":"var _jsxFileName = \"/Users/anaischokote/franciscain/tezos-react-tutorial/client/src/index.js\";\nimport React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport Header from \"./QuizComponent/Header\";\nimport Quiz from \"./QuizComponent/Quiz\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nfunction App() {\n  const [contractInstance, setContractInstance] = useState(undefined);\n  const [userAddress, setUserAddress] = useState(undefined);\n  const [balance, setBalance] = useState(undefined);\n  const [isOwner, setIsOwner] = useState(false);\n  const [contractBalance, setContractBalance] = useState(0);\n  const tezbridge = window.tezbridge;\n\n  const initWallet = async () => {\n    try {\n      // sets rpc host\n\n      /*const rpc = await tezbridge.request({\n        method: \"set_host\",\n        host: \"http://localhost:8732\"\n      });*/\n      // gets user's address\n      const _address = await tezbridge.request({\n        method: \"get_source\"\n      });\n\n      setUserAddress(_address); // gets user's balance\n\n      const _balance = await Tezos.tz.getBalance(_address);\n\n      setBalance(_balance); // gets user's points\n\n      const storage = await contractInstance.storage(); // compares user's address with owner's address\n    } catch (error) {\n      console.log(\"error fetching the address or balance:\", error);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      // sets RPC\n      Tezos.setProvider({\n        rpc: \"http://localhost:8732\",\n        signer: new TezBridgeSigner()\n      }); // fetches contract storage\n\n      const contract = await Tezos.contract.at(contractAddress);\n      setContractInstance(contract);\n      const storage = await contract.storage(); // creates coffee menu\n\n      let coffees = [];\n\n      for (let key of storage.menu.keys()) {\n        coffees.push({\n          name: key,\n          price: storage.menu.get(key).c[0]\n        });\n      } // updates state\n\n\n      setCoffeeMenu(coffees);\n    })();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"wallet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, balance === undefined ? React.createElement(\"button\", {\n    className: \"button is-info is-light is-small\",\n    onClick: initWallet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Connect your wallet\") : React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"balance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"\\uA729 \", balance.toNumber() / 1000000), React.createElement(\"div\", {\n    className: \"field is-grouped\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button is-success is-light is-small\",\n    onClick: async () => {\n      setUserAddress(undefined);\n      setBalance(undefined);\n      await initWallet();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, shortenAddress(userAddress)))))), React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(Quiz, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })));\n}\n\nconst rootElement = document.getElementById(\"root\"); // reader method for react \n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}), rootElement);\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/anaischokote/franciscain/tezos-react-tutorial/client/src/index.js"],"names":["React","Fragment","ReactDOM","Header","Quiz","serviceWorker","App","contractInstance","setContractInstance","useState","undefined","userAddress","setUserAddress","balance","setBalance","isOwner","setIsOwner","contractBalance","setContractBalance","tezbridge","window","initWallet","_address","request","method","_balance","Tezos","tz","getBalance","storage","error","console","log","useEffect","setProvider","rpc","signer","TezBridgeSigner","contract","at","contractAddress","coffees","key","menu","keys","push","name","price","get","c","setCoffeeMenu","toNumber","shortenAddress","rootElement","document","getElementById","render","unregister"],"mappings":"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","sourcesContent":["\nimport React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\nimport Header from \"./QuizComponent/Header\";\nimport Quiz from \"./QuizComponent/Quiz\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nfunction App() {\n  const [contractInstance, setContractInstance] = useState(undefined);\n  const [userAddress, setUserAddress] = useState(undefined);\n  const [balance, setBalance] = useState(undefined);\n  const [isOwner, setIsOwner] = useState(false);\n  const [contractBalance, setContractBalance] = useState(0);\n  const tezbridge = window.tezbridge;\n\n  const initWallet = async () => {\n    try {\n      // sets rpc host\n      /*const rpc = await tezbridge.request({\n        method: \"set_host\",\n        host: \"http://localhost:8732\"\n      });*/\n      // gets user's address\n      const _address = await tezbridge.request({ method: \"get_source\" });\n      setUserAddress(_address);\n      // gets user's balance\n      const _balance = await Tezos.tz.getBalance(_address);\n      setBalance(_balance);\n      // gets user's points\n      const storage = await contractInstance.storage();\n      // compares user's address with owner's address\n    } catch (error) {\n      console.log(\"error fetching the address or balance:\", error);\n    }\n  };\n\n\n  useEffect(() => {\n    (async () => {\n      // sets RPC\n      Tezos.setProvider({\n        rpc: \"http://localhost:8732\",\n        signer: new TezBridgeSigner()\n      });\n      // fetches contract storage\n      const contract = await Tezos.contract.at(contractAddress);\n      setContractInstance(contract);\n      const storage = await contract.storage();\n      // creates coffee menu\n      let coffees = [];\n      for (let key of storage.menu.keys()) {\n        coffees.push({ name: key, price: storage.menu.get(key).c[0] });\n      }\n      // updates state\n      setCoffeeMenu(coffees);\n    })();\n  }, []);\n\n\n\n  return (\n    <div className = \"App\">\n      <div className=\"wallet\">\n          {balance === undefined ? (\n            <button\n              className=\"button is-info is-light is-small\"\n              onClick={initWallet}\n            >\n              Connect your wallet\n            </button>\n          ) : (\n            <>\n              <span className=\"balance\">ꜩ {balance.toNumber() / 1000000}</span>\n              <div className=\"field is-grouped\">\n                <p className=\"control\">\n                  <button\n                    className=\"button is-success is-light is-small\"\n                    onClick={async () => {\n                      setUserAddress(undefined);\n                      setBalance(undefined);\n                      await initWallet();\n                    }}\n                  >\n                    {shortenAddress(userAddress)}\n                  </button>\n                </p>\n              </div>\n            </>\n          )}\n        </div>\n\n    <Fragment>\n\n      {/* header Components */}\n       <center><Header /></center> \n\n      {/* Quiz Components */}\n        <Quiz />\n      \n    </Fragment> \n    </div>\n  )\n}\n\nconst rootElement = document.getElementById(\"root\");\n// reader method for react \nReactDOM.render(<App />, rootElement);\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}