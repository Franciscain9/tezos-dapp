{
  "contractName": "PointOfSale",
  "abi": [],
  "michelson": "[ { \"prim\": \"parameter\",\n    \"args\":\n      [ { \"prim\": \"or\",\n          \"args\":\n            [ { \"prim\": \"or\",\n                \"args\":\n                  [ { \"prim\": \"string\", \"annots\": [ \"%buy\" ] },\n                    { \"prim\": \"unit\", \"annots\": [ \"%redeemPoints\" ] } ] },\n              { \"prim\": \"unit\", \"annots\": [ \"%withdraw\" ] } ] } ] },\n  { \"prim\": \"storage\",\n    \"args\":\n      [ { \"prim\": \"pair\",\n          \"args\":\n            [ { \"prim\": \"pair\",\n                \"args\":\n                  [ { \"prim\": \"map\",\n                      \"args\": [ { \"prim\": \"address\" }, { \"prim\": \"nat\" } ],\n                      \"annots\": [ \"%customers\" ] },\n                    { \"prim\": \"map\",\n                      \"args\": [ { \"prim\": \"string\" }, { \"prim\": \"mutez\" } ],\n                      \"annots\": [ \"%menu\" ] } ] },\n              { \"prim\": \"pair\",\n                \"args\":\n                  [ { \"prim\": \"address\", \"annots\": [ \"%owner\" ] },\n                    { \"prim\": \"mutez\", \"annots\": [ \"%total\" ] } ] } ] } ] },\n  { \"prim\": \"code\",\n    \"args\":\n      [ [ { \"prim\": \"DUP\" }, { \"prim\": \"CDR\" }, { \"prim\": \"SWAP\" },\n          { \"prim\": \"CAR\" },\n          { \"prim\": \"IF_LEFT\",\n            \"args\":\n              [ [ { \"prim\": \"IF_LEFT\",\n                    \"args\":\n                      [ [ { \"prim\": \"PAIR\" }, { \"prim\": \"DUP\" },\n                          { \"prim\": \"CDR\" }, { \"prim\": \"DUP\" },\n                          { \"prim\": \"CAR\" }, { \"prim\": \"CDR\" },\n                          { \"prim\": \"DIG\", \"args\": [ { \"int\": \"2\" } ] },\n                          { \"prim\": \"CAR\" }, { \"prim\": \"GET\" },\n                          { \"prim\": \"IF_NONE\",\n                            \"args\":\n                              [ [ { \"prim\": \"DROP\" },\n                                  { \"prim\": \"PUSH\",\n                                    \"args\":\n                                      [ { \"prim\": \"string\" },\n                                        { \"string\": \"No such item found!\" } ] },\n                                  { \"prim\": \"FAILWITH\" } ],\n                                [ { \"prim\": \"AMOUNT\" },\n                                  { \"prim\": \"COMPARE\" }, { \"prim\": \"LT\" },\n                                  { \"prim\": \"IF\",\n                                    \"args\":\n                                      [ [ { \"prim\": \"DROP\" },\n                                          { \"prim\": \"PUSH\",\n                                            \"args\":\n                                              [ { \"prim\": \"string\" },\n                                                { \"string\":\n                                                    \"You didn't send enough tez!\" } ] },\n                                          { \"prim\": \"FAILWITH\" } ],\n                                        [ { \"prim\": \"DUP\" },\n                                          { \"prim\": \"AMOUNT\" },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"2\" } ] },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"3\" } ] },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"ADD\" },\n                                          { \"prim\": \"DIP\",\n                                            \"args\":\n                                              [ [ { \"prim\": \"DUP\" },\n                                                  { \"prim\": \"CAR\" },\n                                                  { \"prim\": \"SWAP\" },\n                                                  { \"prim\": \"CDR\" },\n                                                  { \"prim\": \"CAR\" } ] ] },\n                                          { \"prim\": \"SWAP\" },\n                                          { \"prim\": \"PAIR\" },\n                                          { \"prim\": \"SWAP\" },\n                                          { \"prim\": \"PAIR\" },\n                                          { \"prim\": \"SWAP\" },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"2\" } ] },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"SENDER\" },\n                                          { \"prim\": \"GET\" },\n                                          { \"prim\": \"IF_NONE\",\n                                            \"args\":\n                                              [ [ { \"prim\": \"SWAP\" },\n                                                  { \"prim\": \"CAR\" },\n                                                  { \"prim\": \"CAR\" },\n                                                  { \"prim\": \"PUSH\",\n                                                    \"args\":\n                                                      [ { \"prim\": \"nat\" },\n                                                        { \"int\": \"1\" } ] },\n                                                  { \"prim\": \"SOME\" },\n                                                  { \"prim\": \"SENDER\" },\n                                                  { \"prim\": \"UPDATE\" } ],\n                                                [ { \"prim\": \"DIG\",\n                                                    \"args\":\n                                                      [ { \"int\": \"2\" } ] },\n                                                  { \"prim\": \"CAR\" },\n                                                  { \"prim\": \"CAR\" },\n                                                  { \"prim\": \"PUSH\",\n                                                    \"args\":\n                                                      [ { \"prim\": \"nat\" },\n                                                        { \"int\": \"1\" } ] },\n                                                  { \"prim\": \"DIG\",\n                                                    \"args\":\n                                                      [ { \"int\": \"2\" } ] },\n                                                  { \"prim\": \"ADD\" },\n                                                  { \"prim\": \"SOME\" },\n                                                  { \"prim\": \"SENDER\" },\n                                                  { \"prim\": \"UPDATE\" } ] ] },\n                                          { \"prim\": \"DIP\",\n                                            \"args\":\n                                              [ [ { \"prim\": \"DUP\" },\n                                                  { \"prim\": \"CDR\" },\n                                                  { \"prim\": \"SWAP\" },\n                                                  { \"prim\": \"CAR\" },\n                                                  { \"prim\": \"CDR\" } ] ] },\n                                          { \"prim\": \"PAIR\" },\n                                          { \"prim\": \"PAIR\" },\n                                          { \"prim\": \"NIL\",\n                                            \"args\":\n                                              [ { \"prim\": \"operation\" } ] },\n                                          { \"prim\": \"PAIR\" } ] ] } ] ] } ],\n                        [ { \"prim\": \"DROP\" }, { \"prim\": \"DUP\" },\n                          { \"prim\": \"CAR\" }, { \"prim\": \"CAR\" },\n                          { \"prim\": \"SENDER\" }, { \"prim\": \"GET\" },\n                          { \"prim\": \"IF_NONE\",\n                            \"args\":\n                              [ [ { \"prim\": \"DROP\" },\n                                  { \"prim\": \"PUSH\",\n                                    \"args\":\n                                      [ { \"prim\": \"string\" },\n                                        { \"string\": \"You don't have points!\" } ] },\n                                  { \"prim\": \"FAILWITH\" } ],\n                                [ { \"prim\": \"PUSH\",\n                                    \"args\":\n                                      [ { \"prim\": \"nat\" }, { \"int\": \"10\" } ] },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"2\" } ] },\n                                  { \"prim\": \"COMPARE\" }, { \"prim\": \"GE\" },\n                                  { \"prim\": \"IF\",\n                                    \"args\":\n                                      [ [ { \"prim\": \"SWAP\" },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"2\" } ] },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"PUSH\",\n                                            \"args\":\n                                              [ { \"prim\": \"nat\" },\n                                                { \"int\": \"10\" } ] },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"2\" } ] },\n                                          { \"prim\": \"SUB\" },\n                                          { \"prim\": \"ABS\" },\n                                          { \"prim\": \"SOME\" },\n                                          { \"prim\": \"SENDER\" },\n                                          { \"prim\": \"UPDATE\" },\n                                          { \"prim\": \"DIP\",\n                                            \"args\":\n                                              [ [ { \"prim\": \"DUP\" },\n                                                  { \"prim\": \"CDR\" },\n                                                  { \"prim\": \"SWAP\" },\n                                                  { \"prim\": \"CAR\" },\n                                                  { \"prim\": \"CDR\" } ] ] },\n                                          { \"prim\": \"PAIR\" },\n                                          { \"prim\": \"PAIR\" },\n                                          { \"prim\": \"NIL\",\n                                            \"args\":\n                                              [ { \"prim\": \"operation\" } ] },\n                                          { \"prim\": \"PAIR\" } ],\n                                        [ { \"prim\": \"DROP\",\n                                            \"args\": [ { \"int\": \"2\" } ] },\n                                          { \"prim\": \"PUSH\",\n                                            \"args\":\n                                              [ { \"prim\": \"string\" },\n                                                { \"string\":\n                                                    \"You don't have enough points!\" } ] },\n                                          { \"prim\": \"FAILWITH\" } ] ] } ] ] } ] ] } ],\n                [ { \"prim\": \"DROP\" }, { \"prim\": \"DUP\" }, { \"prim\": \"CDR\" },\n                  { \"prim\": \"CAR\" }, { \"prim\": \"SENDER\" },\n                  { \"prim\": \"COMPARE\" }, { \"prim\": \"NEQ\" },\n                  { \"prim\": \"IF\",\n                    \"args\":\n                      [ [ { \"prim\": \"DROP\" },\n                          { \"prim\": \"PUSH\",\n                            \"args\":\n                              [ { \"prim\": \"string\" },\n                                { \"string\":\n                                    \"Your are not allowed to perform this action!\" } ] },\n                          { \"prim\": \"FAILWITH\" } ],\n                        [ { \"prim\": \"DUP\" }, { \"prim\": \"CDR\" },\n                          { \"prim\": \"CAR\" },\n                          { \"prim\": \"CONTRACT\",\n                            \"args\": [ { \"prim\": \"unit\" } ] },\n                          { \"prim\": \"IF_NONE\",\n                            \"args\":\n                              [ [ { \"prim\": \"DROP\" },\n                                  { \"prim\": \"PUSH\",\n                                    \"args\":\n                                      [ { \"prim\": \"string\" },\n                                        { \"string\": \"Wrong address provided!\" } ] },\n                                  { \"prim\": \"FAILWITH\" } ],\n                                [ { \"prim\": \"BALANCE\" }, { \"prim\": \"UNIT\" },\n                                  { \"prim\": \"TRANSFER_TOKENS\" },\n                                  { \"prim\": \"SWAP\" },\n                                  { \"prim\": \"NIL\",\n                                    \"args\": [ { \"prim\": \"operation\" } ] },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"2\" } ] },\n                                  { \"prim\": \"CONS\" }, { \"prim\": \"PAIR\" } ] ] } ] ] } ] ] } ] ] } ]",
  "source": "type action =\n| RedeemPoints\n| Buy (string)\n| Withdraw\n\ntype storage = {\n  menu: map (string, tez),\n  customers: map(address, nat),\n  total: tez,\n  owner: address\n}\n\ntype return = (list (operation), storage);\n\nlet addPoint = (storage: storage) : map(address, nat) => {\n  /* checks if customer already exists or has points */\n  let customer_points: option(nat) = Map.find_opt (Tezos.sender, storage.customers);\n  switch (customer_points) {\n    | Some (points) => Map.update(Tezos.sender, Some (points + 1n), storage.customers)\n    | None => Map.add(Tezos.sender, 1n, storage.customers)\n  };\n};\n\n/* Customers can redeem their points to have a free coffee! */\nlet redeemPoints = (storage: storage): return => {\n  /* We test if customer has enough points */\n  switch (Map.find_opt (Tezos.sender, storage.customers)) {\n    | Some (points) => \n      /* if points were found, we check if customer has enough of them */\n      if(points >= 10n){\n        let updated_customers = \n          Map.update(Tezos.sender, Some (abs(points - 10n)), storage.customers);\n        ([]: list(operation), {...storage, customers: updated_customers});\n      } else {\n        failwith(\"You don't have enough points!\"): return;\n      };\n    /* if no point found, error */\n    | None => failwith(\"You don't have points!\"): return;\n  };\n}\n\n/* Customers buy coffee */\nlet buy = ((item, storage): (string, storage)): return => {\n  switch(Map.find_opt (item, storage.menu)){\n    | Some (price) => \n      if(Tezos.amount < price) {\n        failwith(\"You didn't send enough tez!\"): return;\n      } else {\n        ([]: list(operation), \n        {...storage, \n          total : storage.total + Tezos.amount, \n          customers: addPoint (storage)\n        }\n        );\n      }\n    | None => failwith (\"No such item found!\"): return;\n  }\n}\n\n/* Owner withdraws total balance of the contract */\nlet withdraw = (storage: storage): return => {\n  /* checks if user is allowed to withdraw balance */\n  if (Tezos.sender != storage.owner){\n    failwith (\"Your are not allowed to perform this action!\") : return;\n  } else {\n    let receiver : option (contract (unit)) = Tezos.get_contract_opt(storage.owner);\n    switch(receiver){\n      | Some (receiver_address) => {\n        let op : operation = Tezos.transaction (unit, balance, receiver_address);\n        ([op], storage);\n      }\n      | None => failwith(\"Wrong address provided!\"): return;\n    }\n  }\n}\n\nlet main = ((parameter, storage): (action, storage)) : return =>\n switch(parameter) {\n  | RedeemPoints => redeemPoints (storage)\n  | Buy (item) => buy ((item, storage))\n  | Withdraw => withdraw (storage)\n }\n",
  "sourcePath": "/Users/anaischokote/franciscain/tezos-react-tutorial/contracts/PointOfSale.religo",
  "compiler": {
    "name": "ligo",
    "version": "next"
  },
  "networks": {
    "NetXdQprcVkpaWU": {
      "events": {},
      "links": {},
      "address": "KT1VMnVaD6C87DVxVV2bqAim6w3SjSYBQrhn",
      "transactionHash": "ooFmQ3wXqUcqodDpyg9EAW256AjWUqdVASwo3yor3A8qC7gdFRT"
    }
  },
  "schemaVersion": "3.2.0-tezos.1",
  "updatedAt": "2020-11-01T22:16:58.980Z",
  "networkType": "tezos"
}