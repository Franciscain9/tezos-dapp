{"version":3,"file":"taquito-utils.es5.js","sources":["../src/constants.ts","../src/validators.ts","../src/taquito-utils.ts"],"sourcesContent":["export enum Prefix {\n  TZ1 = 'tz1',\n  TZ2 = 'tz2',\n  TZ3 = 'tz3',\n  KT = 'KT',\n  KT1 = 'KT1',\n\n  EDSK2 = 'edsk2',\n  SPSK = 'spsk',\n  P2SK = 'p2sk',\n\n  EDPK = 'edpk',\n  SPPK = 'sppk',\n  P2PK = 'p2pk',\n\n  EDESK = 'edesk',\n  SPESK = 'spesk',\n  P2ESK = 'p2esk',\n\n  EDSK = 'edsk',\n  EDSIG = 'edsig',\n  SPSIG = 'spsig',\n  P2SIG = 'p2sig',\n  SIG = 'sig',\n\n  NET = 'Net',\n  NCE = 'nce',\n  B = 'b',\n  O = 'o',\n  LO = 'Lo',\n  LLO = 'LLo',\n  P = 'P',\n  CO = 'Co',\n  ID = 'id',\n\n  EXPR = 'expr',\n  TZ = 'TZ',\n}\n\nexport const prefix = {\n  [Prefix.TZ1]: new Uint8Array([6, 161, 159]),\n  [Prefix.TZ2]: new Uint8Array([6, 161, 161]),\n  [Prefix.TZ3]: new Uint8Array([6, 161, 164]),\n  [Prefix.KT]: new Uint8Array([2, 90, 121]),\n  [Prefix.KT1]: new Uint8Array([2, 90, 121]),\n\n  [Prefix.EDSK]: new Uint8Array([43, 246, 78, 7]),\n  [Prefix.EDSK2]: new Uint8Array([13, 15, 58, 7]),\n  [Prefix.SPSK]: new Uint8Array([17, 162, 224, 201]),\n  [Prefix.P2SK]: new Uint8Array([16, 81, 238, 189]),\n\n  [Prefix.EDPK]: new Uint8Array([13, 15, 37, 217]),\n  [Prefix.SPPK]: new Uint8Array([3, 254, 226, 86]),\n  [Prefix.P2PK]: new Uint8Array([3, 178, 139, 127]),\n\n  [Prefix.EDESK]: new Uint8Array([7, 90, 60, 179, 41]),\n  [Prefix.SPESK]: new Uint8Array([0x09, 0xed, 0xf1, 0xae, 0x96]),\n  [Prefix.P2ESK]: new Uint8Array([0x09, 0x30, 0x39, 0x73, 0xab]),\n\n  [Prefix.EDSIG]: new Uint8Array([9, 245, 205, 134, 18]),\n  [Prefix.SPSIG]: new Uint8Array([13, 115, 101, 19, 63]),\n  [Prefix.P2SIG]: new Uint8Array([54, 240, 44, 52]),\n  [Prefix.SIG]: new Uint8Array([4, 130, 43]),\n\n  [Prefix.NET]: new Uint8Array([87, 82, 0]),\n  [Prefix.NCE]: new Uint8Array([69, 220, 169]),\n  [Prefix.B]: new Uint8Array([1, 52]),\n  [Prefix.O]: new Uint8Array([5, 116]),\n  [Prefix.LO]: new Uint8Array([133, 233]),\n  [Prefix.LLO]: new Uint8Array([29, 159, 109]),\n  [Prefix.P]: new Uint8Array([2, 170]),\n  [Prefix.CO]: new Uint8Array([79, 179]),\n  [Prefix.ID]: new Uint8Array([153, 103]),\n\n  [Prefix.EXPR]: new Uint8Array([13, 44, 64, 27]),\n  // Legacy prefix\n  [Prefix.TZ]: new Uint8Array([2, 90, 121]),\n};\n\nexport const prefixLength: { [key: string]: number } = {\n  [Prefix.TZ1]: 20,\n  [Prefix.TZ2]: 20,\n  [Prefix.TZ3]: 20,\n  [Prefix.KT]: 20,\n  [Prefix.KT1]: 20,\n  [Prefix.EDPK]: 32,\n  [Prefix.SPPK]: 33,\n  [Prefix.P2PK]: 33,\n  [Prefix.EDSIG]: 64,\n  [Prefix.SPSIG]: 64,\n  [Prefix.P2SIG]: 64,\n  [Prefix.SIG]: 64,\n  [Prefix.NET]: 4,\n  [Prefix.B]: 32,\n  [Prefix.P]: 32,\n};\n","import { prefix, prefixLength, Prefix } from './constants';\n\nconst bs58check = require('bs58check');\n\nexport enum ValidationResult {\n  NO_PREFIX_MATCHED,\n  INVALID_CHECKSUM,\n  INVALID_LENGTH,\n  VALID,\n}\n\nexport function isValidPrefix(value: any): value is Prefix {\n  if (typeof value !== 'string') {\n    return false;\n  }\n\n  return value in prefix;\n}\n\nfunction validatePrefixedValue(value: any, prefixes: Prefix[]) {\n  const match = new RegExp(`^(${prefixes.join('|')})`).exec(value);\n  if (!match || match.length === 0) {\n    return ValidationResult.NO_PREFIX_MATCHED;\n  }\n\n  const prefixKey = match[0];\n\n  if (!isValidPrefix(prefixKey)) {\n    return ValidationResult.NO_PREFIX_MATCHED;\n  }\n\n  // decodeUnsafe return undefined if decoding fail\n  let decoded = bs58check.decodeUnsafe(value);\n  if (!decoded) {\n    return ValidationResult.INVALID_CHECKSUM;\n  }\n\n  decoded = decoded.slice(prefix[prefixKey].length);\n  if (decoded.length !== prefixLength[prefixKey]) {\n    return ValidationResult.INVALID_LENGTH;\n  }\n\n  return ValidationResult.VALID;\n}\n\nconst implicitPrefix = [Prefix.TZ1, Prefix.TZ2, Prefix.TZ3];\nconst contractPrefix = [Prefix.KT1];\nconst signaturePrefix = [Prefix.EDSIG, Prefix.P2SIG, Prefix.SPSIG, Prefix.SIG];\nconst pkPrefix = [Prefix.EDPK, Prefix.SPPK, Prefix.P2PK];\nexport function validateAddress(value: any): ValidationResult {\n  return validatePrefixedValue(value, [...implicitPrefix, ...contractPrefix]);\n}\n\nexport function validateChain(value: any): ValidationResult {\n  return validatePrefixedValue(value, [Prefix.NET]);\n}\n\nexport function validateContractAddress(value: any): ValidationResult {\n  return validatePrefixedValue(value, contractPrefix);\n}\n\nexport function validateKeyHash(value: any): ValidationResult {\n  return validatePrefixedValue(value, implicitPrefix);\n}\n\nexport function validateSignature(value: any): ValidationResult {\n  return validatePrefixedValue(value, signaturePrefix);\n}\n\nexport function validatePublicKey(value: any): ValidationResult {\n  return validatePrefixedValue(value, pkPrefix);\n}\n","/*\n * Some code in this file is originally from sotez and eztz\n * Copyright (c) 2018 Andrew Kishino\n * Copyright (c) 2017 Stephen Andrews\n */\n\nimport { Buffer } from 'buffer';\nimport { prefix } from './constants';\nconst blake = require('blakejs');\nconst bs58check = require('bs58check');\n\nexport * from './validators';\n\nexport { prefix, Prefix, prefixLength } from './constants';\n\nexport function encodeExpr(value: string) {\n  const blakeHash = blake.blake2b(hex2buf(value), null, 32);\n  return b58cencode(blakeHash, prefix['expr']);\n}\n\n/**\n *\n * @description Base58 encode a string or a Uint8Array and append a prefix to it\n *\n * @param value Value to base58 encode\n * @param prefix prefix to append to the encoded string\n */\nexport function b58cencode(value: string | Uint8Array, prefix: Uint8Array) {\n  const payloadAr = typeof value === 'string' ? Uint8Array.from(Buffer.from(value, 'hex')) : value;\n\n  const n = new Uint8Array(prefix.length + payloadAr.length);\n  n.set(prefix);\n  n.set(payloadAr, prefix.length);\n\n  return bs58check.encode(Buffer.from(n.buffer));\n}\n\n/**\n *\n * @description Base58 decode a string and remove the prefix from it\n *\n * @param value Value to base58 decode\n * @param prefix prefix to remove from the decoded string\n */\nexport const b58cdecode = (enc: string, prefixArg: Uint8Array): Uint8Array =>\n  bs58check.decode(enc).slice(prefixArg.length);\n\n/**\n *\n * @description Base58 decode a string with predefined prefix\n *\n * @param value Value to base58 decode\n */\nexport function b58decode(payload: string) {\n  const buf: Buffer = bs58check.decode(payload);\n\n  const prefixMap = {\n    [prefix.tz1.toString()]: '0000',\n    [prefix.tz2.toString()]: '0001',\n    [prefix.tz3.toString()]: '0002',\n  };\n\n  let pref = prefixMap[new Uint8Array(buf.slice(0, 3)).toString()];\n  if (pref) {\n    // tz addresses\n    const hex = buf2hex(buf.slice(3));\n    return pref + hex;\n  } else {\n    // other (kt addresses)\n    return '01' + buf2hex(buf.slice(3, 42)) + '00';\n  }\n}\n\n/**\n *\n * @description Base58 encode a public key using predefined prefix\n *\n * @param value Public Key to base58 encode\n */\nexport function encodePubKey(value: string) {\n  if (value.substring(0, 2) === '00') {\n    const pref: { [key: string]: Uint8Array } = {\n      '0000': prefix.tz1,\n      '0001': prefix.tz2,\n      '0002': prefix.tz3,\n    };\n\n    return b58cencode(value.substring(4), pref[value.substring(0, 4)]);\n  }\n\n  return b58cencode(value.substring(2, 42), prefix.KT);\n}\n\nexport function encodeKey(value: string) {\n  if (value[0] === '0') {\n    const pref: { [key: string]: Uint8Array } = {\n      '00': new Uint8Array([13, 15, 37, 217]),\n      '01': new Uint8Array([3, 254, 226, 86]),\n      '02': new Uint8Array([3, 178, 139, 127]),\n    };\n\n    return b58cencode(value.substring(2), pref[value.substring(0, 2)]);\n  }\n}\n\nexport function encodeKeyHash(value: string) {\n  if (value[0] === '0') {\n    const pref: { [key: string]: Uint8Array } = {\n      '00': new Uint8Array([6, 161, 159]),\n      '01': new Uint8Array([6, 161, 161]),\n      '02': new Uint8Array([6, 161, 164]),\n    };\n\n    return b58cencode(value.substring(2), pref[value.substring(0, 2)]);\n  }\n}\n\n/**\n *\n * @description Convert an hex string to a Uint8Array\n *\n * @param hex Hex string to convert\n */\nexport const hex2buf = (hex: string): Uint8Array => {\n  return new Uint8Array(hex.match(/[\\da-f]{2}/gi)!.map(h => parseInt(h, 16)));\n};\n\n/**\n *\n * @description Generate a random hex nonce\n *\n * @param length length of the nonce\n */\nexport const hexNonce = (length: number): string => {\n  const chars = '0123456789abcedf';\n  let hex = '';\n  while (length--) {\n    hex += chars[(Math.random() * 16) | 0];\n  }\n  return hex;\n};\n\n/**\n *\n * @description Merge 2 buffers together\n *\n * @param b1 First buffer\n * @param b2 Second buffer\n */\nexport const mergebuf = (b1: Uint8Array, b2: Uint8Array): Uint8Array => {\n  const r = new Uint8Array(b1.length + b2.length);\n  r.set(b1);\n  r.set(b2, b1.length);\n  return r;\n};\n\n/**\n *\n * @description Convert a michelson string expression to it's json representation\n *\n * @param mi Michelson string expression to convert to json\n */\nexport const sexp2mic = function me(mi: string): any {\n  mi = mi\n    .replace(/(?:@[a-z_]+)|(?:#.*$)/gm, '')\n    .replace(/\\s+/g, ' ')\n    .trim();\n  if (mi.charAt(0) === '(') mi = mi.slice(1, -1);\n  let pl = 0;\n  let sopen = false;\n  let escaped = false;\n  const ret: { prim: string; args: any[] } = {\n    prim: '',\n    args: [],\n  };\n  let val = '';\n  for (let i = 0; i < mi.length; i++) {\n    if (escaped) {\n      val += mi[i];\n      escaped = false;\n      continue;\n    } else if (\n      (i === mi.length - 1 && sopen === false) ||\n      (mi[i] === ' ' && pl === 0 && sopen === false)\n    ) {\n      if (i === mi.length - 1) val += mi[i];\n      if (val) {\n        if (val === parseInt(val, 10).toString()) {\n          if (!ret.prim) return { int: val };\n          ret.args.push({ int: val });\n        } else if (val[0] === '0' && val[1] === 'x') {\n          val = val.substr(2);\n          if (!ret.prim) return { bytes: val };\n          ret.args.push({ bytes: val });\n        } else if (ret.prim) {\n          ret.args.push(me(val));\n        } else {\n          ret.prim = val;\n        }\n        val = '';\n      }\n      continue;\n    } else if (mi[i] === '\"' && sopen) {\n      sopen = false;\n      if (!ret.prim) return { string: val };\n      ret.args.push({ string: val });\n      val = '';\n      continue;\n    } else if (mi[i] === '\"' && !sopen && pl === 0) {\n      sopen = true;\n      continue;\n    } else if (mi[i] === '\\\\') escaped = true;\n    else if (mi[i] === '(') pl++;\n    else if (mi[i] === ')') pl--;\n    val += mi[i];\n  }\n  return ret;\n};\n\n/**\n *\n * @description Flatten a michelson json representation to an array\n *\n * @param s michelson json\n */\nexport const mic2arr = function me2(s: any): any {\n  let ret: any = [];\n  if (Object.prototype.hasOwnProperty.call(s, 'prim')) {\n    if (s.prim === 'Pair') {\n      ret.push(me2(s.args[0]));\n      ret = ret.concat(me2(s.args[1]));\n    } else if (s.prim === 'Elt') {\n      ret = {\n        key: me2(s.args[0]),\n        val: me2(s.args[1]),\n      };\n    } else if (s.prim === 'True') {\n      ret = true;\n    } else if (s.prim === 'False') {\n      ret = false;\n    }\n  } else if (Array.isArray(s)) {\n    const sc = s.length;\n    for (let i = 0; i < sc; i++) {\n      const n = me2(s[i]);\n      if (typeof n.key !== 'undefined') {\n        if (Array.isArray(ret)) {\n          ret = {\n            keys: [],\n            vals: [],\n          };\n        }\n        ret.keys.push(n.key);\n        ret.vals.push(n.val);\n      } else {\n        ret.push(n);\n      }\n    }\n  } else if (Object.prototype.hasOwnProperty.call(s, 'string')) {\n    ret = s.string;\n  } else if (Object.prototype.hasOwnProperty.call(s, 'int')) {\n    ret = parseInt(s.int, 10);\n  } else {\n    ret = s;\n  }\n  return ret;\n};\n\n/**\n *\n * @description Convert a michelson string to it's json representation\n *\n * @param mi Michelson string to convert to json\n *\n * @warn This implementation of the Michelson parser is a prototype. The current implementation is naïve. We are likely going to switch to using the Nomadic Michelson encoder in the future, as per Issue https://gitlab.com/tezos/tezos/issues/581\n */\nexport const ml2mic = function me(mi: string): any {\n  const ret = [];\n  let inseq = false;\n  let seq = '';\n  let val = '';\n  let pl = 0;\n  let bl = 0;\n  let sopen = false;\n  let escaped = false;\n  for (let i = 0; i < mi.length; i++) {\n    if (val === '}' || val === ';') {\n      val = '';\n    }\n    if (inseq) {\n      if (mi[i] === '}') {\n        bl--;\n      } else if (mi[i] === '{') {\n        bl++;\n      }\n      if (bl === 0) {\n        const st = me(val);\n        ret.push({\n          prim: seq.trim(),\n          args: [st],\n        });\n        val = '';\n        bl = 0;\n        inseq = false;\n      }\n    } else if (mi[i] === '{') {\n      bl++;\n      seq = val;\n      val = '';\n      inseq = true;\n      continue;\n    } else if (escaped) {\n      val += mi[i];\n      escaped = false;\n      continue;\n    } else if (\n      (i === mi.length - 1 && sopen === false) ||\n      (mi[i] === ';' && pl === 0 && sopen === false)\n    ) {\n      if (i === mi.length - 1) val += mi[i];\n      if (val.trim() === '' || val.trim() === '}' || val.trim() === ';') {\n        val = '';\n        continue;\n      }\n      ret.push(sexp2mic(val));\n      val = '';\n      continue;\n    } else if (mi[i] === '\"' && sopen) {\n      sopen = false;\n    } else if (mi[i] === '\"' && !sopen) {\n      sopen = true;\n    } else if (mi[i] === '\\\\') {\n      escaped = true;\n    } else if (mi[i] === '(') {\n      pl++;\n    } else if (mi[i] === ')') {\n      pl--;\n    }\n    val += mi[i];\n  }\n  return ret;\n};\n\n/**\n *\n * @description Convert a buffer to an hex string\n *\n * @param buffer Buffer to convert\n */\nexport const buf2hex = (buffer: Buffer): string => {\n  const byteArray = new Uint8Array(buffer);\n  const hexParts: string[] = [];\n  byteArray.forEach((byte: any) => {\n    const hex = byte.toString(16);\n    const paddedHex = `00${hex}`.slice(-2);\n    hexParts.push(paddedHex);\n  });\n  return hexParts.join('');\n};\n"],"names":["bs58check"],"mappings":"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"}