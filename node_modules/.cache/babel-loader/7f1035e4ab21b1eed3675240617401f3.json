{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/franciscainpadonou/Documents/code/tezos/quizbet/tezos-dapp/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React from 'react';\nimport conseiljs, { registerFetch, registerLogger, TezosNodeWriter, TezosParameterFormat, TezosConseilClient, Signer, TezosMessageUtils } from 'conseiljs';\nimport { KeyStoreUtils, SoftSigner } from 'conseiljs-softsigner'; //const tezosNode = 'https://tezos-dev.cryptonomic-infra.tech:443';\n\nconst tezosNode = 'https://delphinet.smartpy.io';\n\nasync function VotingFunction(candidate) {\n  console.log(candidate);\n  const keystore = {\n    publicKey: 'edpku9bsa8hw5obPYut7ES2GF6MWjTvFdAsxuXzoMo6zFXa1KPwp6j',\n    privateKey: 'edskRybLHufbQ7rhnq2Dv4cqc6EfLriVM9BmHwB6ToAH3K4kbivJxuaMhwkiJGacEpFbMAfAZrNivPsZ3C6CUC4MR8iBBBeHvS',\n    publicKeyHash: 'tz1f3vYsCGhxs1d41Y95Jn2ZoKto1HSJAfcq',\n    seed: '',\n    storeType: 1\n  };\n  const contractAddress = 'KT1FGXfNQqtaCbvyxUYhmedwr4rWuKubv2sA'; //const signer = 'tz1f3vYsCGhxs1d41Y95Jn2ZoKto1HSJAfcq';\n\n  const signer = await SoftSigner.createSigner(TezosMessageUtils.writeKeyWithHint(keystore.privateKey, 'edsk'), -1); //const result = await TezosNodeWriter.sendContractPing(tezosNode,signer, keystore ,contractAddress, 10000, 100000, '', 1000, 100000)\n\n  const result = await TezosNodeWriter.sendContractInvocationOperation(tezosNode, signer, keystore, contractAddress, 0, 100000, 1000, 750000, '', `\"${candidate}\"`, TezosParameterFormat.Michelson);\n  console.log(`Injected operation group id ${result.operationGroupID}`); //\n  //finishit(\"Data inserted successfully in blockchain. Reference id:\"+result.operationGroupID);\n\n  return result.operationGroupID;\n}\n/*function httpGet() {\n  let xmlHttp = new XMLHttpRequest();\n  xmlHttp.open( \"GET\", 'https://delphinet.smartpy.io/chains/main/blocks/head/context/contracts/KT1FGXfNQqtaCbvyxUYhmedwr4rWuKubv2sA/storage', false ); // false for synchronous request\n  xmlHttp.send( null );\n  console.log(JSON.parse(xmlHttp.responseText));\n}\n*/\n\n\n_c = VotingFunction;\n\nfunction App() {\n  // httpGet()\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"headerName\",\n        children: \"Voting Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome, you can vote for your favourite candidate here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"col\",\n              onClick: () => VotingFunction(\"Modi\"),\n              children: \"Vote for N Modi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"col\",\n              onClick: () => VotingFunction(\"Kejriwal\"),\n              children: \"Vote for A Kejriwal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VotingFunction\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/franciscainpadonou/Documents/code/tezos/quizbet/tezos-dapp/src/App.js"],"names":["React","conseiljs","registerFetch","registerLogger","TezosNodeWriter","TezosParameterFormat","TezosConseilClient","Signer","TezosMessageUtils","KeyStoreUtils","SoftSigner","tezosNode","VotingFunction","candidate","console","log","keystore","publicKey","privateKey","publicKeyHash","seed","storeType","contractAddress","signer","createSigner","writeKeyWithHint","result","sendContractInvocationOperation","Michelson","operationGroupID","App"],"mappings":"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","sourcesContent":["\nimport logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport conseiljs , { registerFetch, registerLogger, TezosNodeWriter, TezosParameterFormat, TezosConseilClient, Signer,TezosMessageUtils } from 'conseiljs';\nimport { KeyStoreUtils, SoftSigner } from 'conseiljs-softsigner';\n\n\n\n//const tezosNode = 'https://tezos-dev.cryptonomic-infra.tech:443';\nconst tezosNode = 'https://delphinet.smartpy.io';\n\nasync function VotingFunction(candidate) {\n\tconsole.log(candidate);\n  const keystore = {\n      publicKey: 'edpku9bsa8hw5obPYut7ES2GF6MWjTvFdAsxuXzoMo6zFXa1KPwp6j',\n      privateKey: 'edskRybLHufbQ7rhnq2Dv4cqc6EfLriVM9BmHwB6ToAH3K4kbivJxuaMhwkiJGacEpFbMAfAZrNivPsZ3C6CUC4MR8iBBBeHvS',\n      publicKeyHash: 'tz1f3vYsCGhxs1d41Y95Jn2ZoKto1HSJAfcq',\n      seed: '',\n      storeType: 1\n  };\n  const contractAddress = 'KT1FGXfNQqtaCbvyxUYhmedwr4rWuKubv2sA';\n //const signer = 'tz1f3vYsCGhxs1d41Y95Jn2ZoKto1HSJAfcq';\n \n  const signer = await SoftSigner.createSigner(TezosMessageUtils.writeKeyWithHint(keystore.privateKey, 'edsk'),-1);\n  \n\n  //const result = await TezosNodeWriter.sendContractPing(tezosNode,signer, keystore ,contractAddress, 10000, 100000, '', 1000, 100000)\n  const result = await TezosNodeWriter.sendContractInvocationOperation(tezosNode,signer,keystore, contractAddress,  0, 100000, 1000, 750000,'', `\"${candidate}\"`, TezosParameterFormat.Michelson);\n  \n  console.log(`Injected operation group id ${result.operationGroupID}`);\n  //\n  //finishit(\"Data inserted successfully in blockchain. Reference id:\"+result.operationGroupID);\n  return result.operationGroupID;\n}\n\n/*function httpGet() {\n  let xmlHttp = new XMLHttpRequest();\n  xmlHttp.open( \"GET\", 'https://delphinet.smartpy.io/chains/main/blocks/head/context/contracts/KT1FGXfNQqtaCbvyxUYhmedwr4rWuKubv2sA/storage', false ); // false for synchronous request\n  xmlHttp.send( null );\n  console.log(JSON.parse(xmlHttp.responseText));\n}\n*/\n\n\nfunction App() {\n // httpGet()\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h4 className=\"headerName\">Voting Application</h4>\n      </header>\n\n      <div className=\"container\">\n        <h1>Welcome, you can vote for your favourite candidate here.</h1>\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <button className=\"col\" onClick={() => VotingFunction(\"Modi\")}>\n                Vote for N Modi\n              </button>\n            </div>\n          </div>\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <button className=\"col\" onClick={() => VotingFunction(\"Kejriwal\")}>\n                Vote for A Kejriwal\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}