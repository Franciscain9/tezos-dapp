{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst jsonpath_plus_1 = require(\"jsonpath-plus\");\n\nconst TezosTypes = __importStar(require(\"../../../types/tezos/TezosChainTypes\"));\n\nconst TezosMessageUtil_1 = require(\"../TezosMessageUtil\");\n\nconst TezosNodeReader_1 = require(\"../TezosNodeReader\");\n\nconst TezosNodeWriter_1 = require(\"../TezosNodeWriter\");\n\nconst TezosContractUtils_1 = require(\"./TezosContractUtils\");\n\nvar StakerDAOTokenHelper;\n\n(function (StakerDAOTokenHelper) {\n  function verifyDestination(server, address) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return TezosContractUtils_1.TezosContractUtils.verifyDestination(server, address, '0e3e137841a959521324b4ce20ca2df7');\n    });\n  }\n\n  StakerDAOTokenHelper.verifyDestination = verifyDestination;\n\n  function verifyScript(script) {\n    return TezosContractUtils_1.TezosContractUtils.verifyScript(script, 'b77ada691b1d630622bea243696c84d7');\n  }\n\n  StakerDAOTokenHelper.verifyScript = verifyScript;\n\n  function getAccountBalance(server, mapid, account) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const packedKey = TezosMessageUtil_1.TezosMessageUtils.encodeBigMapKey(Buffer.from(TezosMessageUtil_1.TezosMessageUtils.writePackedData(account, 'address'), 'hex'));\n      const mapResult = yield TezosNodeReader_1.TezosNodeReader.getValueForBigMapKey(server, mapid, packedKey);\n\n      if (mapResult === undefined) {\n        throw new Error(`Map ${mapid} does not contain a record for ${account}`);\n      }\n\n      return Number(jsonpath_plus_1.JSONPath({\n        path: '$.int',\n        json: mapResult\n      })[0]);\n    });\n  }\n\n  StakerDAOTokenHelper.getAccountBalance = getAccountBalance;\n\n  function getSimpleStorage(server, address) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const storageResult = yield TezosNodeReader_1.TezosNodeReader.getContractStorage(server, address);\n      return {\n        mapid: Number(jsonpath_plus_1.JSONPath({\n          path: '$.args[1].args[1].args[0].int',\n          json: storageResult\n        })[0]),\n        council: jsonpath_plus_1.JSONPath({\n          path: '$.args[0].args[0].args[1]..string',\n          json: storageResult\n        }),\n        stage: Number(jsonpath_plus_1.JSONPath({\n          path: '$.args[1].args[0].args[0].int',\n          json: storageResult\n        })[0]),\n        phase: Number(jsonpath_plus_1.JSONPath({\n          path: '$.args[1].args[0].args[0].int',\n          json: storageResult\n        })[0]) % 4,\n        supply: Number(jsonpath_plus_1.JSONPath({\n          path: '$.args[1].args[0].args[1].int',\n          json: storageResult\n        })[0]),\n        paused: jsonpath_plus_1.JSONPath({\n          path: '$.args[1].args[1].args[1].args[0].prim',\n          json: storageResult\n        })[0].toString().toLowerCase().startsWith('t')\n      };\n    });\n  }\n\n  StakerDAOTokenHelper.getSimpleStorage = getSimpleStorage;\n\n  function transferBalance(server, signer, keystore, contract, fee, source, destination, amount, gas, freight) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const parameters = `(Right (Left (Left (Right (Pair \"${source}\" (Pair \"${destination}\" ${amount}))))))`;\n      const nodeResult = yield TezosNodeWriter_1.TezosNodeWriter.sendContractInvocationOperation(server, signer, keystore, contract, 0, fee, freight, gas, '', parameters, TezosTypes.TezosParameterFormat.Michelson);\n      return TezosContractUtils_1.TezosContractUtils.clearRPCOperationGroupHash(nodeResult.operationGroupID);\n    });\n  }\n\n  StakerDAOTokenHelper.transferBalance = transferBalance;\n})(StakerDAOTokenHelper = exports.StakerDAOTokenHelper || (exports.StakerDAOTokenHelper = {}));","map":{"version":3,"sources":["../../../../src/chain/tezos/contracts/StakerDAOTokenHelper.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst jsonpath_plus_1 = require(\"jsonpath-plus\");\nconst TezosTypes = __importStar(require(\"../../../types/tezos/TezosChainTypes\"));\nconst TezosMessageUtil_1 = require(\"../TezosMessageUtil\");\nconst TezosNodeReader_1 = require(\"../TezosNodeReader\");\nconst TezosNodeWriter_1 = require(\"../TezosNodeWriter\");\nconst TezosContractUtils_1 = require(\"./TezosContractUtils\");\nvar StakerDAOTokenHelper;\n(function (StakerDAOTokenHelper) {\n    function verifyDestination(server, address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return TezosContractUtils_1.TezosContractUtils.verifyDestination(server, address, '0e3e137841a959521324b4ce20ca2df7');\n        });\n    }\n    StakerDAOTokenHelper.verifyDestination = verifyDestination;\n    function verifyScript(script) {\n        return TezosContractUtils_1.TezosContractUtils.verifyScript(script, 'b77ada691b1d630622bea243696c84d7');\n    }\n    StakerDAOTokenHelper.verifyScript = verifyScript;\n    function getAccountBalance(server, mapid, account) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const packedKey = TezosMessageUtil_1.TezosMessageUtils.encodeBigMapKey(Buffer.from(TezosMessageUtil_1.TezosMessageUtils.writePackedData(account, 'address'), 'hex'));\n            const mapResult = yield TezosNodeReader_1.TezosNodeReader.getValueForBigMapKey(server, mapid, packedKey);\n            if (mapResult === undefined) {\n                throw new Error(`Map ${mapid} does not contain a record for ${account}`);\n            }\n            return Number(jsonpath_plus_1.JSONPath({ path: '$.int', json: mapResult })[0]);\n        });\n    }\n    StakerDAOTokenHelper.getAccountBalance = getAccountBalance;\n    function getSimpleStorage(server, address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const storageResult = yield TezosNodeReader_1.TezosNodeReader.getContractStorage(server, address);\n            return {\n                mapid: Number(jsonpath_plus_1.JSONPath({ path: '$.args[1].args[1].args[0].int', json: storageResult })[0]),\n                council: jsonpath_plus_1.JSONPath({ path: '$.args[0].args[0].args[1]..string', json: storageResult }),\n                stage: Number(jsonpath_plus_1.JSONPath({ path: '$.args[1].args[0].args[0].int', json: storageResult })[0]),\n                phase: Number(jsonpath_plus_1.JSONPath({ path: '$.args[1].args[0].args[0].int', json: storageResult })[0]) % 4,\n                supply: Number(jsonpath_plus_1.JSONPath({ path: '$.args[1].args[0].args[1].int', json: storageResult })[0]),\n                paused: (jsonpath_plus_1.JSONPath({ path: '$.args[1].args[1].args[1].args[0].prim', json: storageResult })[0]).toString().toLowerCase().startsWith('t')\n            };\n        });\n    }\n    StakerDAOTokenHelper.getSimpleStorage = getSimpleStorage;\n    function transferBalance(server, signer, keystore, contract, fee, source, destination, amount, gas, freight) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const parameters = `(Right (Left (Left (Right (Pair \"${source}\" (Pair \"${destination}\" ${amount}))))))`;\n            const nodeResult = yield TezosNodeWriter_1.TezosNodeWriter.sendContractInvocationOperation(server, signer, keystore, contract, 0, fee, freight, gas, '', parameters, TezosTypes.TezosParameterFormat.Michelson);\n            return TezosContractUtils_1.TezosContractUtils.clearRPCOperationGroupHash(nodeResult.operationGroupID);\n        });\n    }\n    StakerDAOTokenHelper.transferBalance = transferBalance;\n})(StakerDAOTokenHelper = exports.StakerDAOTokenHelper || (exports.StakerDAOTokenHelper = {}));\n//# sourceMappingURL=StakerDAOTokenHelper.js.map"]},"metadata":{},"sourceType":"script"}